---
import { REDIS_URL, REDIS_PASS } from "astro:env/server";
import { createClient } from "@redis/client";

type Props = {
  postId: string;
};

const { postId } = Astro.props;

const clientIP = Astro.clientAddress;
const blogViewKey = `blog:views:${postId}:viewed:${clientIP}`;

const redisClient = createClient({
  url: REDIS_URL,
  password: REDIS_PASS,
  socket: {
    tls: false
  }
});

await redisClient.connect();
const hasViewed = await redisClient.get(blogViewKey);
if (!hasViewed) {
  await redisClient.incr(`blog:views:${postId}`);
  await redisClient.set(blogViewKey, "true");
}
const views = await redisClient.get(`blog:views:${postId}`);
await redisClient.quit();
---

<span title={`WyÅ›wietlenia: ${views}`}>
  |
  <span class="inline-flex items-center justify-center gap-2 align-bottom">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="15"
      height="15"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round"
      class="lucide lucide-eye"
      ><path
        d="M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0"
      ></path><circle cx="12" cy="12" r="3"></circle></svg
    >
    {views}
  </span>
</span>
