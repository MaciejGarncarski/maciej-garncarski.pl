---
import { Picture } from "astro:assets";
import { getCollection } from "astro:content";
import { calculateReadingTime } from "../utils/calculate-read-time";

type Props = {
  text: string;
};

const { text } = Astro.props;

const allBlogPosts = await getCollection("blog");
const currPost = allBlogPosts.find((post) => post.data.title === text);
const formattedTime = new Intl.DateTimeFormat("pl").format(
  currPost?.data.pubDate
);
const readTime = calculateReadingTime(currPost?.body || "");
---

<header
  class="relative -mx-5 flex h-80 flex-col items-center justify-center gap-4 lg:mx-auto lg:h-100 lg:w-3/4">
  {
    currPost?.data.heroImage && (
      <>
        <div
          data-blog-hero-bg
          class="absolute top-0 left-0 -z-10 mx-auto h-full w-full overflow-hidden opacity-10 blur-sm md:rounded-4xl lg:blur-xl">
          <div class="bg-blog-hero-gradient absolute top-0 left-0 h-full w-full" />
          <Picture
            src={currPost.data.heroImage}
            alt={text}
            width={512}
            height={512}
            class="h-full w-full object-cover"
            priority={true}
          />
        </div>
        <Picture
          src={currPost.data.heroImage}
          width={512}
          height={512}
          alt={text}
          class="h-42 w-42 rounded-sm"
          priority={true}
        />
      </>
    )
  }
  <div class="z-30 flex flex-col gap-2 text-center text-balance transition-all">
    <h1
      class="text-foreground z-50 max-w-full px-5 text-center text-xl font-bold lg:max-w-prose lg:text-2xl">
      {text}
    </h1>
    <p class="text-center text-base">
      <time datetime={formattedTime} class="tracking-tighter lg:tracking-tight">
        {formattedTime}
      </time>
      | {readTime} min. czytania
    </p>
  </div>
</header>
